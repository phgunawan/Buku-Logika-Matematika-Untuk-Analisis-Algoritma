# -*- coding: utf-8 -*-
"""Buku Logika Kompleksitas Waktu.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1V5UMrVEjPh44O0sDKeZFxbcGzZahWhJF

# Kompleksitas waktu

Dalam program berikut akan diberikan contoh bagaimana kompleksitas waktu dihitung dari beberapa algoritma.


*   **Judul Buku**: Logka Matematika untuk Analisis Algoritma
*   **Penulis**: Dr. Putu Harry Gunawan

## Kompleksitas waktu linier
<center><img src = "https://i.imgur.com/W404xLS.png" align = "center" width="500" height="280"> </center>

**Contoh untuk satu program**
"""

import time
start_time = time.time()
n= 1000000

sum =0
i = 3
while i < n-4:
  sum = x*x
  i += 1

waktu = time.time() - start_time
print("--- %s seconds ---" % (waktu))

"""Program untuk $n$ yang menaik"""

import time

larik_n= [100000, 1000000, 5000000, 10000000]
waktu = []
for n in range(0,4):
  start_time = time.time()
  sum =0
  i = 3
  while i < larik_n[n]-4:
    sum = x*x
    i += 1
  waktu.append(time.time() - start_time)
  print("%s seconds ---" % (time.time() - start_time))

"""plot execution time"""

import matplotlib.pyplot as plt
plt.scatter(larik_n,waktu)
plt.grid()
plt.title('Kompleksitas waktu Linier pad Contoh 8.8',fontsize=18)
plt.xlabel("$n$",fontsize=18)
plt.ylabel("$T(n)$",fontsize=18)
plt.savefig('KompleksitasLiner.png')
plt.show()

"""## Kompleksitas waktu Kuadratik
<center><img src = "https://i.imgur.com/gWisFOy.png" align = "center" width="500" height="300"> </center>

Program untuk kenaikan $n$
"""

import time

larik_n= [100, 1000, 2000, 4000, 6000, 8000, 10000]
waktu = []
for n in range(0,7):
  start_time = time.time()
  sum =0
  i = 2
  while i < larik_n[n]-1:
    for j in range(0,larik_n[n]):
      sum = x*x
    i += 1
  waktu.append(time.time() - start_time)
  print("%s seconds ---" % (time.time() - start_time))

"""Plot Execution time"""

import matplotlib.pyplot as plt
plt.scatter(larik_n,waktu)
plt.grid()
plt.title('Kompleksitas waktu Linier pad Contoh 8.9',fontsize=18)
plt.xlabel("$n$",fontsize=18)
plt.ylabel("$T(n)$",fontsize=18)
plt.savefig('KompleksitasKuadratik.png')
plt.show()